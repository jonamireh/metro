interface Accessors {
  abstract val intProvider: Provider<Int>
    abstract get

  abstract val string: String
    abstract get

}

@DependencyGraph
interface ExampleGraph {
  @Deprecated(message = "This synthesized declaration should not be used directly", level = DeprecationLevel.HIDDEN)
  @MetroImplMarker
  class Impl : ExampleGraph {
    private val accessorsInstance: Accessors
      field = accessors

    private val accessorsInstanceProvider: Provider<Accessors>
      field = Companion.invoke<Accessors>(value = <this>.#accessorsInstance)

    private val accessorsGetIntProvider: Provider<Int>
      field = <this>.#accessorsInstance.<get-intProvider>()

    private val accessorsGetStringProvider: Provider<String>
      field = provider<String>(provider = local fun <anonymous>(): String {
        return <this>.#accessorsInstance.<get-string>()
      }
)

    private constructor(@Includes accessors: Accessors) /* primary */ {
      super/*Any*/()
      /* <init>() */

    }

    override val int: Int
      override get(): Int {
        return <this>.#accessorsGetIntProvider.invoke()
      }

    override val string: String
      override get(): String {
        return <this>.#accessorsGetStringProvider.invoke()
      }

  }

  companion object Companion : Factory {
    private constructor() /* primary */ {
      super/*Any*/()
      /* <init>() */

    }

    @GraphFactoryInvokeFunctionMarker
    override fun create(@Includes accessors: Accessors): ExampleGraph {
      return Impl(accessors = accessors)
    }

  }

  @Factory
  interface Factory {
    @Deprecated(message = "This synthesized declaration should not be used directly", level = DeprecationLevel.HIDDEN)
    @MetroImplMarker
    object Impl : Factory {
      private constructor() /* primary */ {
        super/*Any*/()
        /* <init>() */

      }

      @GraphFactoryInvokeFunctionMarker
      override fun create(@Includes accessors: Accessors): ExampleGraph {
        return Impl(accessors = accessors)
      }

    }

    abstract fun create(@Includes accessors: Accessors): ExampleGraph

  }

  abstract val int: Int
    abstract get

  abstract val string: String
    abstract get

}

